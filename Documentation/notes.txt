1) model "stance" as enumeration (more legible in source code)
  - make changes in diagram accordingly (add Enum classifier)
2) add realistic elements (like "reload" and "current ammo = 0) to restrict player
   abilities and possibility of exploiting method calls (for example, spamming "shoot")
3) include layer in diagram


TODO:
general:
- how to change action_points? (in eine Methode auslagern, um zentrale Stelle zu haben?)
- what type must be kept in enemyList and teamList?

change_stance():
- if currStance already equal to newStance, then consider not deduct points


Issues List (add to issues board):
Agent:
- define agent: set variables and implement initialize method

Methods:
- implement refill_action_points
- define enum stance and implement change_stance method
- implement explore_env (not finished)
- implement explore_walls
- implement explore_team
- implement explore_enemies
- implement move_me
- implement shoot (not finished)
- implement passive getter methods: GetVisibility, GetX, GetY