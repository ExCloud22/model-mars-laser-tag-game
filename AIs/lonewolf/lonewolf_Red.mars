	tick {
		// tag everything for points
		var enemies = exploreEnemies();
		each (var e in enemies.Item1()) { tag(e) }
		each (var e in enemies.Item2) { tag(e) }
		each (var e in enemies.Item3) { tag(e) }
		
		// aggressive
		if (energy > 50) {
			//if (enemies.Item1.Length() + enemies.Item2.Length() + enemies.Item3.Length() == 0) {
				// exploration
				var team = exploreTeam()
				// *** Update: check if team is empty before accessing index ***
				if (length(team) > 0) {
				var nearestMate  = team[0]
				var minDistance : real = 9999
				each (var teammate in team) {
					if (getDistance(teammate) <= minDistance) {
						minDistance = getDistance(teammate)
						nearestMate = teammate
					}
				}
				if (enemiesFromTeam.Size() > 0) {
					var nearestEnemy: Tuple<real, real> = enemiesFromTeam.Get(0)
					var minEnemyDistance: real = 9999
					for (var i = 0; i < enemiesFromTeam.Size(); i++){
					if(getDistance(enemiesFromTeam.Get(i).Item1(), enemiesFromTeam.Get(i).Item2()) <= minEnemyDistance){
						minEnemyDistance = getDistance(enemiesFromTeam.Get(i).Item1(), enemiesFromTeam.Get(i).Item2())
						nearestEnemy = enemiesFromTeam.Get(i)
						}
					}
	//					each (var enemyCoord in enemiesFromTeam) {
	//						if (getDistance(enemyCoord.Item1(), enemyCoord.Item2()) <= minEnemyDistance) {
	//							minEnemyDistance = getDistance(enemyCoord.Item1(), enemyCoord.Item2())
	//							nearestEnemy = enemyCoord
	//						}
	//					}
					goTo(nearestEnemy.Item1, nearestEnemy.Item2)
					// team cohesion
				} else if (minDistance > 10) {
					goTo(nearestMate.GetX(), nearestMate.GetY())
				} else {
					goTo(random(battleground.DimensionX()), random(battleground.DimensionY()))
				}
			//} else {

			//}
		//passive
				}
		} else {
			var team = exploreTeam()
			if (length(team) > 0) {
				var nearestMate : Red = team[0]
			var minDistance : real = 9999
			each (var teammate in team) {
				if (getDistance(teammate) <= minDistance) {
					minDistance = getDistance(teammate)
					nearestMate = teammate
				}
			}
			//cohesion first
			if (minDistance > 10) {
				goTo(nearestMate.GetX(), nearestMate.GetY())
			} else if (enemiesFromTeam.Size() > 0) {
				var nearestEnemy: Tuple<real, real> = enemiesFromTeam.Get(0)
				var minEnemyDistance: real = 9999
				for (var i = 0; i < enemiesFromTeam.Size(); i++){
					if(getDistance(enemiesFromTeam.Get(i).Item1(), enemiesFromTeam.Get(i).Item2()) <= minEnemyDistance){
						minEnemyDistance = getDistance(enemiesFromTeam.Get(i).Item1(), enemiesFromTeam.Get(i).Item2())
						nearestEnemy = enemiesFromTeam.Get(i)
					}
				}
	//				each (var enemyCoord in enemiesFromTeam) {
	//					if (getDistance(enemyCoord.Item1(), enemyCoord.Item2()) <= minEnemyDistance) {
	//						minEnemyDistance = getDistance(enemyCoord.Item1(), enemyCoord.Item2())
	//						nearestEnemy = enemyCoord
	//					}
	//				}
				goTo(nearestEnemy.Item1, nearestEnemy.Item2)
			} else {
				goTo(random(battleground.DimensionX()), random(battleground.DimensionY()))
			}
			}
			
		}
		
		refillPoints()
	}
